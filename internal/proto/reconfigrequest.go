// Autogenerated jute compiler
// @generated from '/Users/ardi/go/src/github.com/facebookincubator/zk/internal/zookeeper.jute'

package proto // github.com/facebookincubator/zk/internal/proto

import (
	"fmt"

	"github.com/go-zookeeper/jute/lib/go/jute"
)

type ReconfigRequest struct {
	JoiningServers *string // joiningServers
	LeavingServers *string // leavingServers
	NewMembers     *string // newMembers
	CurConfigId    int64   // curConfigId
}

func (r *ReconfigRequest) Read(dec jute.Decoder) (err error) {
	if err = dec.ReadStart(); err != nil {
		return err
	}
	r.JoiningServers, err = dec.ReadUstring()
	if err != nil {
		return err
	}
	r.LeavingServers, err = dec.ReadUstring()
	if err != nil {
		return err
	}
	r.NewMembers, err = dec.ReadUstring()
	if err != nil {
		return err
	}
	r.CurConfigId, err = dec.ReadLong()
	if err != nil {
		return err
	}
	if err = dec.ReadEnd(); err != nil {
		return err
	}
	return nil
}

func (r *ReconfigRequest) Write(enc jute.Encoder) error {
	if err := enc.WriteStart(); err != nil {
		return err
	}
	if err := enc.WriteUstring(r.JoiningServers); err != nil {
		return err
	}
	if err := enc.WriteUstring(r.LeavingServers); err != nil {
		return err
	}
	if err := enc.WriteUstring(r.NewMembers); err != nil {
		return err
	}
	if err := enc.WriteLong(r.CurConfigId); err != nil {
		return err
	}
	if err := enc.WriteEnd(); err != nil {
		return err
	}
	return nil
}

func (r *ReconfigRequest) String() string {
	if r == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ReconfigRequest(%+v)", *r)
}
